{"version":3,"sources":["Photo.js","App.js","index.js"],"names":["Photo","likes","regular","urls","user","name","portfolio_url","medium","profile_image","alt_description","className","src","alt","href","clientID","process","REACT_APP_ACCESS_KEY","App","useState","loading","setLoading","photos","setPhotos","page","setPage","searchRef","useRef","mounted","query","setQuery","newImages","setNewImages","fetchData","a","urlPage","url","fetch","response","json","data","oldPhotos","results","useEffect","console","log","current","oldPage","event","window","innerHeight","scrollY","document","body","scrollHeight","addEventListener","removeEventListener","type","placeholder","ref","value","onChange","e","target","onClick","preventDefault","map","photo","key","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"6PA4BeA,EA1BD,SAAC,GASR,IARLC,EAQI,EARJA,MACQC,EAOJ,EAPJC,KAAQD,QAOJ,IANJE,KACEC,EAKE,EALFA,KACAC,EAIE,EAJFA,cACiBC,EAGf,EAHFC,cAAiBD,OAEnBE,EACI,EADJA,gBAEA,OACE,6BAASC,UAAU,SACjB,yBAAKC,IAAKT,EAASU,IAAKH,IACxB,yBAAKC,UAAU,cACb,6BACE,4BAAKL,GACL,qCAAOJ,EAAP,YAEF,uBAAGY,KAAMP,GACP,yBAAKK,IAAKJ,EAAQK,IAAKP,EAAMK,UAAU,iBClB3CI,EAAQ,qBAAiBC,uIAAYC,sBAgH5BC,MA5Gf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGWJ,mBAAS,GAHpB,mBAGNK,EAHM,KAGAC,EAHA,KAIPC,EAAYC,mBACZC,EAAUD,kBAAO,GALV,EAMaR,mBAAS,IANtB,mBAMNU,EANM,KAMCC,EAND,OAOqBX,oBAAS,GAP9B,mBAONY,EAPM,KAOKC,EAPL,KAQPC,EAAS,uCAAG,kCAAAC,EAAA,sEAEdb,GAAW,GAELc,EAJQ,gBAIWX,GAJX,UAOZY,EADEP,EACC,UAjBI,2CAiBJ,OAAkBd,GAAlB,OAPS,WAOT,OAAwCc,GAExC,UApBE,oCAoBF,OAAgBd,GAAhB,OAA2BoB,GATlB,SAWSE,MAAMD,GAXf,cAWRE,EAXQ,iBAYKA,EAASC,OAZd,QAYRC,EAZQ,OAadjB,GAAU,SAACkB,GACT,OAAIZ,GAAkB,IAATL,EACJgB,EAAKE,QAEN,GAAN,mBAAWD,GADFZ,EACT,YAAyBW,EAAKE,SAE9B,YAAyBF,OAG7BR,GAAa,GACbX,GAAW,GAvBG,kDAyBdA,GAAW,GAzBG,0DAAH,qDA6BfsB,qBAAU,WACJvB,GACJa,MACC,CAACT,IACJmB,qBAAU,WAER,GADAC,QAAQC,IAAI,kBAAmBjB,EAAQkB,UAClClB,EAAQkB,QAKX,OAFAF,QAAQC,IAAIjB,EAAQkB,cACpBlB,EAAQkB,SAAU,GAIff,IACDX,IACJK,GAAQ,SAACsB,GAAD,OAAaA,EAAU,KAC/BH,QAAQC,IAAI,sBACX,CAACd,IAEJ,IAUMiB,EAAQ,WACRC,OAAOC,YAAcD,OAAOE,SAAWC,SAASC,KAAKC,aAAe,GACtEtB,GAAa,IAWjB,OARAW,qBAAU,WAGR,OAFAM,OAAOM,iBAAiB,SAAUP,GAE3B,WACLC,OAAOO,oBAAoB,SAAUR,MAEtC,IAGD,8BACE,6BAASrC,UAAU,UACjB,0BAAMA,UAAU,eACd,2BACE8C,KAAK,OACL9C,UAAU,aACV+C,YAAY,SACZC,IAAKjC,EACLkC,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAOhC,EAASgC,EAAEC,OAAOH,UAErC,4BAAQH,KAAK,SAAS9C,UAAU,aAAaqD,QAnChC,SAACF,GACpBA,EAAEG,iBACGpC,IACQ,IAATL,EAIJC,EAAQ,GAHNQ,OAgCM,kBAAC,IAAD,SAIN,6BAAStB,UAAU,UACjB,yBAAKA,UAAU,iBACZW,EAAO4C,KAAI,SAACC,GACX,OAAO,kBAAC,EAAD,eAAOC,IAAKD,EAAME,IAAQF,WCtG7CG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpB,SAASqB,eAAe,W","file":"static/js/main.9cdcec9e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Photo = ({\n  likes,\n  urls: { regular },\n  user: {\n    name,\n    portfolio_url,\n    profile_image: { medium },\n  },\n  alt_description,\n}) => {\n  return (\n    <article className=\"photo\">\n      <img src={regular} alt={alt_description}></img>\n      <div className=\"photo-info\">\n        <div>\n          <h4>{name}</h4>\n          <p>{`${likes} likes`}</p>\n        </div>\n        <a href={portfolio_url}>\n          <img src={medium} alt={name} className=\"user-img\"></img>\n        </a>\n      </div>\n    </article>\n  );\n};\n\nexport default Photo;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport Photo from \"./Photo\";\nconst clientID = `?client_id=${process.env.REACT_APP_ACCESS_KEY}`;\nconst mainUrl = `https://api.unsplash.com/photos/`;\nconst searchUrl = `https://api.unsplash.com/search/photos/`;\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const [page, setPage] = useState(1);\n  const searchRef = useRef();\n  const mounted = useRef(false);\n  const [query, setQuery] = useState(\"\");\n  const [newImages, setNewImages] = useState(false);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      let url;\n      const urlPage = `&page=${page}`;\n      const queryUrl = `&query=`;\n      if (query) {\n        url = `${searchUrl}${clientID}${queryUrl}${query}`;\n      } else {\n        url = `${mainUrl}${clientID}${urlPage}`;\n      }\n      const response = await fetch(url);\n      const data = await response.json();\n      setPhotos((oldPhotos) => {\n        if (query && page === 1) {\n          return data.results;\n        } else if (query) {\n          return [...oldPhotos, ...data.results];\n        } else {\n          return [...oldPhotos, ...data];\n        }\n      });\n      setNewImages(false); //set switch back to off after getting data\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (loading) return;\n    fetchData();\n  }, [page]);\n  useEffect(() => {\n    console.log(\"mounted.current\", mounted.current);\n    if (!mounted.current) {\n      //this means that if we are in the initial render(which the mounted ref sets as false), we\n      //set it back to true to know whether the component was rerendered.\n      console.log(mounted.current);\n      mounted.current = true;\n      return;\n    }\n    //he two if statements below checks for both and when wea re at the point of\n    if (!newImages) return;\n    if (loading) return;\n    setPage((oldPage) => oldPage + 1);\n    console.log(\"initial render\");\n  }, [newImages]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!query) return;\n    if (page === 1) {\n      fetchData();\n      return;\n    }\n    setPage(1);\n  };\n\n  const event = () => {\n    if (window.innerHeight + window.scrollY >= document.body.scrollHeight - 2) {\n      setNewImages(true);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"scroll\", event);\n\n    return () => {\n      window.removeEventListener(\"scroll\", event);\n    };\n  }, []);\n\n  return (\n    <main>\n      <section className=\"search\">\n        <form className=\"search-form\">\n          <input\n            type=\"text\"\n            className=\"form-input\"\n            placeholder=\"search\"\n            ref={searchRef}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n          ></input>\n          <button type=\"submit\" className=\"submit-btn\" onClick={handleSubmit}>\n            <FaSearch />\n          </button>\n        </form>\n      </section>\n      <section className=\"photos\">\n        <div className=\"photos-center\">\n          {photos.map((photo) => {\n            return <Photo key={photo.id} {...photo}></Photo>;\n          })}\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}